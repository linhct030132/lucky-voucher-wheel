version: "3.8"

services:
  # MySQL Database
  database:
    image: mysql:8.0
    container_name: voucher_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_NAME:-voucher_system}
      MYSQL_USER: ${DB_USER:-voucher_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-password123}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./backend/database/migrations:/docker-entrypoint-initdb.d
    networks:
      - voucher_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: voucher_backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: database
      DB_PORT: 3306
      DB_NAME: ${DB_NAME:-voucher_system}
      DB_USER: ${DB_USER:-voucher_user}
      DB_PASSWORD: ${DB_PASSWORD:-password123}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      JWT_EXPIRE: ${JWT_EXPIRE:-7d}
      DEVICE_SECRET: ${DEVICE_SECRET:-your-device-fingerprint-secret-key}
      EMAIL_HOST: ${EMAIL_HOST:-smtp.gmail.com}
      EMAIL_PORT: ${EMAIL_PORT:-587}
      EMAIL_USER: ${EMAIL_USER:-your-email@gmail.com}
      EMAIL_PASS: ${EMAIL_PASS:-your-app-password}
      EMAIL_FROM: ${EMAIL_FROM:-"Lucky Voucher System <noreply@yourdomain.com>"}
    ports:
      - "5000:5000"
    volumes:
      - ./backend/uploads:/app/uploads
    depends_on:
      database:
        condition: service_healthy
    networks:
      - voucher_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: voucher_frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - voucher_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  db_data:
    driver: local

networks:
  voucher_network:
    driver: bridge
